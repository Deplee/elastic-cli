"""
–ö–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å ILM –ø–æ–ª–∏—Ç–∏–∫–∞–º–∏ Elasticsearch
"""

import json
from rich.table import Table
from rich.panel import Panel
from rich.syntax import Syntax
from rich import box
from .base import BaseCommand


class ILMCommands(BaseCommand):
    """–ö–æ–º–∞–Ω–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è ILM –ø–æ–ª–∏—Ç–∏–∫–∞–º–∏"""
    
    def do_ilm(self, arg):
        """–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ ILM –ø–æ–ª–∏—Ç–∏–∫–∞–º–∏.
–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
- ilm list: –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ ILM –ø–æ–ª–∏—Ç–∏–∫–∏ –≤ –∫–ª–∞—Å—Ç–µ—Ä–µ.
- ilm show <policy_name>: –ü–æ–∫–∞–∑–∞—Ç—å JSON –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –ø–æ–ª–∏—Ç–∏–∫–∏.
- ilm explain <index_name>: –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –∏ —Ñ–∞–∑—É ILM –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∏–Ω–¥–µ–∫—Å–∞.
"""
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã help
        if arg in ["-h", "--help", "help"]:
            help_text = """
[bold blue]üìú –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ ILM –ø–æ–ª–∏—Ç–∏–∫–∞–º–∏[/bold blue]

[bold]–û–ø–∏—Å–∞–Ω–∏–µ:[/bold]
Index Lifecycle Management (ILM) –ø–æ–∑–≤–æ–ª—è–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–ø—Ä–∞–≤–ª—è—Ç—å –∂–∏–∑–Ω–µ–Ω–Ω—ã–º —Ü–∏–∫–ª–æ–º –∏–Ω–¥–µ–∫—Å–æ–≤, –≤–∫–ª—é—á–∞—è —Å–æ–∑–¥–∞–Ω–∏–µ, –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏ —É–¥–∞–ª–µ–Ω–∏–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–æ–ª–∏—Ç–∏–∫.

[bold]–ö–æ–º–∞–Ω–¥—ã:[/bold]
‚Ä¢ [cyan]ilm list[/cyan] - –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ ILM –ø–æ–ª–∏—Ç–∏–∫–∏ –≤ –∫–ª–∞—Å—Ç–µ—Ä–µ
‚Ä¢ [cyan]ilm show <–∏–º—è_–ø–æ–ª–∏—Ç–∏–∫–∏>[/cyan] - –ø–æ–∫–∞–∑–∞—Ç—å JSON –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –ø–æ–ª–∏—Ç–∏–∫–∏
‚Ä¢ [cyan]ilm explain <–∏–º—è_–∏–Ω–¥–µ–∫—Å–∞>[/cyan] - –ø–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –∏ —Ñ–∞–∑—É ILM –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∏–Ω–¥–µ–∫—Å–∞

[bold]–û—Ç–æ–±—Ä–∞–∂–∞–µ–º–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:[/bold]
‚Ä¢ [bold]–ò–º—è –ø–æ–ª–∏—Ç–∏–∫–∏[/bold] - –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–æ–ª–∏—Ç–∏–∫–∏ ILM
‚Ä¢ [bold]–í–µ—Ä—Å–∏—è[/bold] - –≤–µ—Ä—Å–∏—è –ø–æ–ª–∏—Ç–∏–∫–∏
‚Ä¢ [bold]–î–∞—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è[/bold] - –¥–∞—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–ª–∏—Ç–∏–∫–∏
‚Ä¢ [bold]–§–∞–∑–∞[/bold] - —Ç–µ–∫—É—â–∞—è —Ñ–∞–∑–∞ –∂–∏–∑–Ω–µ–Ω–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ (hot, warm, cold, delete)
‚Ä¢ [bold]–î–µ–π—Å—Ç–≤–∏–µ[/bold] - –≤—ã–ø–æ–ª–Ω—è–µ–º–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –≤ —Ç–µ–∫—É—â–µ–π —Ñ–∞–∑–µ

[bold]–ü—Ä–∏–º–µ—Ä—ã:[/bold]
‚Ä¢ ilm list
‚Ä¢ ilm show my-policy
‚Ä¢ ilm explain my-index-2024.01.01

[bold]–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª–∏—Ç–∏–∫:[/bold]
–ü–æ–ª–∏—Ç–∏–∫–∏ ILM —Å–æ–∑–¥–∞—é—Ç—Å—è —á–µ—Ä–µ–∑ Elasticsearch API –∏–ª–∏ Kibana.

[dim]–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: ILM –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–ø—Ä–∞–≤–ª—è–µ—Ç –∏–Ω–¥–µ–∫—Å–∞–º–∏ —Å–æ–≥–ª–∞—Å–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–º –ø–æ–ª–∏—Ç–∏–∫–∞–º[/dim]
"""
            self.console.print(Panel(help_text, title="–°–ø—Ä–∞–≤–∫–∞: ilm", border_style="blue", expand=False))
            return

        parts = arg.split()
        if not parts:
            self.console.print("[red]–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –∫–æ–º–∞–Ω–¥—É: list, show <policy_name> –∏–ª–∏ explain <index_name>[/red]")
            return

        command = parts[0]
        if command == "list":
            if len(parts) > 1:
                self.console.print("[red]–û—à–∏–±–∫–∞: –∫–æ–º–∞–Ω–¥–∞ 'list' –Ω–µ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤.[/red]")
                return

            data = self.cli.make_request("/_ilm/policy")
            if not data:
                return

            table = Table(title="üìú ILM –ü–æ–ª–∏—Ç–∏–∫–∏", box=box.ROUNDED)
            table.add_column("–ò–º—è –ø–æ–ª–∏—Ç–∏–∫–∏", style="cyan")
            table.add_column("–í–µ—Ä—Å–∏—è", style="blue")
            table.add_column("–î–∞—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è", style="yellow")
            
            for name, policy_data in data.items():
                table.add_row(
                    name,
                    str(policy_data.get('version', 'N/A')),
                    policy_data.get('modified_date', 'N/A')
                )
            self.console.print(table)
        
        elif command == "show":
            if len(parts) < 2:
                self.console.print("[red]–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –∏–º—è –ø–æ–ª–∏—Ç–∏–∫–∏[/red]")
                return
            policy_name = parts[1]
            data = self.cli.make_request(f"/_ilm/policy/{policy_name}")
            if data:
                policy_content = data.get(policy_name, {}).get('policy', {})
                policy_str = json.dumps(policy_content, indent=2, ensure_ascii=False)
                self.console.print(Panel(
                    Syntax(policy_str, "json", theme="monokai", line_numbers=True),
                    title=f"üìú ILM –ü–æ–ª–∏—Ç–∏–∫–∞: {policy_name}",
                    border_style="blue"
                ))
            else:
                # –ü–æ–¥—Å–∫–∞–∑–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                self.console.print(f"[yellow]–ü–æ–¥—Å–∫–∞–∑–∫–∞: –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –ø–æ–ª–∏—Ç–∏–∫–∞ —Å –∏–º–µ–Ω–µ–º '{policy_name}'.[/yellow]")
                self.console.print(f"[yellow]–í–æ–∑–º–æ–∂–Ω–æ, –≤—ã —Ö–æ—Ç–µ–ª–∏ —É–∑–Ω–∞—Ç—å —Å—Ç–∞—Ç—É—Å –¥–ª—è –∏–Ω–¥–µ–∫—Å–∞? –ü–æ–ø—Ä–æ–±—É–π—Ç–µ: [bold]ilm explain {policy_name}[/bold][/yellow]")
        
        elif command == "explain":
            if len(parts) < 2:
                self.console.print("[red]–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –∏–º—è –∏–Ω–¥–µ–∫—Å–∞[/red]")
                return
            index_name = parts[1]
            data = self.cli.make_request(f"/{index_name}/_ilm/explain")
            if data:
                index_info = data.get('indices', {}).get(index_name, {})
                
                # –°–æ–∑–¥–∞–µ–º –∫—Ä–∞—Å–∏–≤—É—é —Ç–∞–±–ª–∏—Ü—É –¥–ª—è –≤—ã–≤–æ–¥–∞
                table = Table(title=f"üå°Ô∏è –°—Ç–∞—Ç—É—Å ILM –¥–ª—è –∏–Ω–¥–µ–∫—Å–∞ [bold]{index_name}[/bold]", box=box.ROUNDED)
                table.add_column("–ü–∞—Ä–∞–º–µ—Ç—Ä", style="cyan", no_wrap=True)
                table.add_column("–ó–Ω–∞—á–µ–Ω–∏–µ", style="magenta")

                table.add_row("–£–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è ILM?", "[green]–î–∞[/green]" if index_info.get('managed', False) else "[red]–ù–µ—Ç[/red]")
                table.add_row("–ü–æ–ª–∏—Ç–∏–∫–∞", index_info.get('policy', 'N/A'))
                table.add_row("–§–∞–∑–∞", index_info.get('phase', 'N/A'))
                table.add_row("–î–µ–π—Å—Ç–≤–∏–µ", index_info.get('action', 'N/A'))
                table.add_row("–®–∞–≥", index_info.get('step', 'N/A'))
                
                step_info = index_info.get('step_info')
                if step_info:
                    step_info_str = json.dumps(step_info, indent=2, ensure_ascii=False)
                    table.add_row("–î–µ—Ç–∞–ª–∏ —à–∞–≥–∞", Syntax(step_info_str, "json", theme="monokai"))

                self.console.print(table)
            else:
                self.console.print(f"[red]–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± ILM –¥–ª—è –∏–Ω–¥–µ–∫—Å–∞ '{index_name}'.[/red]")
        else:
            self.console.print(f"[red]–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è 'ilm': '{command}'.[/red]")
            self.console.print("[yellow]–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã: list, show, explain.[/yellow]")
