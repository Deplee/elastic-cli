import json
from rich.table import Table
from rich.panel import Panel
from rich import box
from .base import BaseCommand


class SnapshotCommands(BaseCommand):
    
    def do_snapshots(self, arg):
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã help
        if arg in ["-h", "--help", "help"]:
            help_text = """
[bold blue]üì∏ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–Ω–∞–ø—à–æ—Ç–∞–º–∏[/bold blue]

[bold]–û–ø–∏—Å–∞–Ω–∏–µ:[/bold]
–°–Ω–∞–ø—à–æ—Ç—ã –ø–æ–∑–≤–æ–ª—è—é—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏ –∏–Ω–¥–µ–∫—Å–æ–≤ –∏ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å –∏—Ö –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏. –°–Ω–∞–ø—à–æ—Ç—ã —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è—Ö.

[bold]–ö–æ–º–∞–Ω–¥—ã:[/bold]
‚Ä¢ [cyan]snapshots[/cyan] - –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ —Å–Ω–∞–ø—à–æ—Ç–æ–≤
‚Ä¢ [cyan]snapshots <—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π> list[/cyan] - –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —Å–Ω–∞–ø—à–æ—Ç—ã –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏

[bold]–û—Ç–æ–±—Ä–∞–∂–∞–µ–º–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:[/bold]
‚Ä¢ [bold]–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π[/bold] - –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–Ω–∞–ø—à–æ—Ç–æ–≤
‚Ä¢ [bold]–¢–∏–ø[/bold] - —Ç–∏–ø —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è (fs, s3, hdfs, etc.)
‚Ä¢ [bold]–ù–∞—Å—Ç—Ä–æ–π–∫–∏[/bold] - –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
‚Ä¢ [bold]–ò–º—è —Å–Ω–∞–ø—à–æ—Ç–∞[/bold] - –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–Ω–∞–ø—à–æ—Ç–∞
‚Ä¢ [bold]–°—Ç–∞—Ç—É—Å[/bold] - —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–Ω–∞–ø—à–æ—Ç–∞ (SUCCESS, FAILED, IN_PROGRESS)
‚Ä¢ [bold]–ò–Ω–¥–µ–∫—Å—ã[/bold] - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–Ω–¥–µ–∫—Å–æ–≤ –≤ —Å–Ω–∞–ø—à–æ—Ç–µ
‚Ä¢ [bold]–†–∞–∑–º–µ—Ä[/bold] - –æ–±—â–∏–π —Ä–∞–∑–º–µ—Ä —Å–Ω–∞–ø—à–æ—Ç–∞
‚Ä¢ [bold]–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è[/bold] - –≤—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–Ω–∞–ø—à–æ—Ç–∞

[bold]–ü—Ä–∏–º–µ—Ä—ã:[/bold]
‚Ä¢ snapshots
‚Ä¢ snapshots my-repo list

[bold]–°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤:[/bold]
–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ —Å–æ–∑–¥–∞—é—Ç—Å—è —á–µ—Ä–µ–∑ Elasticsearch API –∏–ª–∏ Kibana.

[dim]–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –°–Ω–∞–ø—à–æ—Ç—ã —Ç—Ä–µ–±—É—é—Ç –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω–æ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è[/dim]
"""
            self.console.print(Panel(help_text, title="–°–ø—Ä–∞–≤–∫–∞: snapshots", border_style="blue", expand=False))
            return

        if not arg:
            # –ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏
            data = self.cli.make_request("/_snapshot")
            if not data:
                return
            
            table = Table(title="üì∏ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ —Å–Ω–∞–ø—à–æ—Ç–æ–≤", box=box.ROUNDED)
            table.add_column("–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π", style="cyan")
            table.add_column("–¢–∏–ø", style="blue")
            table.add_column("–ù–∞—Å—Ç—Ä–æ–π–∫–∏", style="green")
            
            for repo_name, repo_data in data.items():
                table.add_row(
                    repo_name,
                    repo_data.get('type', 'N/A'),
                    str(repo_data.get('settings', {}))
                )
            
            self.console.print(table)
        else:
            parts = arg.split()
            if len(parts) >= 2:
                repo = parts[0]
                command = parts[1]
                
                if command == "list":
                    data = self.cli.make_request(f"/_snapshot/{repo}/_all")
                    if data and 'snapshots' in data:
                        table = Table(title=f"üì∏ –°–Ω–∞–ø—à–æ—Ç—ã –≤ {repo}", box=box.ROUNDED)
                        table.add_column("–ò–º—è", style="cyan")
                        table.add_column("–°—Ç–∞—Ç—É—Å", style="blue")
                        table.add_column("–ò–Ω–¥–µ–∫—Å—ã", style="green")
                        table.add_column("–†–∞–∑–º–µ—Ä", style="yellow")
                        table.add_column("–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è", style="magenta")
                        
                        for snapshot in data['snapshots']:
                            table.add_row(
                                snapshot.get('snapshot', 'N/A'),
                                snapshot.get('state', 'N/A'),
                                str(len(snapshot.get('indices', []))),
                                snapshot.get('stats', {}).get('total_size', 'N/A'),
                                snapshot.get('start_time', 'N/A')
                            )
                        
                        self.console.print(table)
